[{"/Users/jmilani/Dropbox/Coding/capex/src/index.js":"1","/Users/jmilani/Dropbox/Coding/capex/src/App.js":"2","/Users/jmilani/Dropbox/Coding/capex/src/reportWebVitals.js":"3","/Users/jmilani/Dropbox/Coding/capex/src/serviceWorker.js":"4","/Users/jmilani/Dropbox/Coding/capex/src/ColorModeSwitcher.js":"5","/Users/jmilani/Dropbox/Coding/capex/src/Logo.js":"6","/Users/jmilani/Dropbox/Coding/capex/src/data.js":"7","/Users/jmilani/Dropbox/Coding/capex/src/components/totalCost.js":"8","/Users/jmilani/Dropbox/Coding/capex/src/components/header/header.js":"9","/Users/jmilani/Dropbox/Coding/capex/src/components/header/nav.js":"10","/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routeSwitch.js":"11","/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routes/calculator/calculator.js":"12","/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routes/calculator/replacementOptions.js":"13","/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routes/calculator/main.js":"14","/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routes/calculator/expense.js":"15","/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routes/calculator/sideBar.js":"16","/Users/jmilani/Dropbox/Coding/capex/src/hooks/useUpdateExpensesData.js":"17","/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routes/home/propertyDetails.js":"18","/Users/jmilani/Dropbox/Coding/capex/src/hooks/useUpdatePropertyDetails.js":"19","/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routes/projections/projections.js":"20","/Users/jmilani/Dropbox/Coding/capex/src/helpers/totalCAPEX.js":"21"},{"size":923,"mtime":1612288494957,"results":"22","hashOfConfig":"23"},{"size":1687,"mtime":1612589914791,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1611285712927,"results":"25","hashOfConfig":"23"},{"size":5081,"mtime":1611285712927,"results":"26","hashOfConfig":"23"},{"size":617,"mtime":1611285712926,"results":"27","hashOfConfig":"23"},{"size":489,"mtime":1611285712926,"results":"28","hashOfConfig":"23"},{"size":3531,"mtime":1612626458642,"results":"29","hashOfConfig":"23"},{"size":156,"mtime":1611291033855,"results":"30","hashOfConfig":"23"},{"size":448,"mtime":1612287633301,"results":"31","hashOfConfig":"23"},{"size":774,"mtime":1612586997270,"results":"32","hashOfConfig":"23"},{"size":1273,"mtime":1612650410471,"results":"33","hashOfConfig":"23"},{"size":749,"mtime":1612583016977,"results":"34","hashOfConfig":"23"},{"size":4138,"mtime":1612298515575,"results":"35","hashOfConfig":"23"},{"size":598,"mtime":1612586374517,"results":"36","hashOfConfig":"23"},{"size":4219,"mtime":1612665280849,"results":"37","hashOfConfig":"23"},{"size":1365,"mtime":1612643578827,"results":"38","hashOfConfig":"23"},{"size":673,"mtime":1612588903898,"results":"39","hashOfConfig":"23"},{"size":2520,"mtime":1612631766179,"results":"40","hashOfConfig":"23"},{"size":389,"mtime":1612588953777,"results":"41","hashOfConfig":"23"},{"size":3830,"mtime":1612670610446,"results":"42","hashOfConfig":"23"},{"size":740,"mtime":1612647021021,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"15khwut",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jmilani/Dropbox/Coding/capex/src/index.js",[],["88","89"],"/Users/jmilani/Dropbox/Coding/capex/src/App.js",["90"],"/Users/jmilani/Dropbox/Coding/capex/src/reportWebVitals.js",[],"/Users/jmilani/Dropbox/Coding/capex/src/serviceWorker.js",[],"/Users/jmilani/Dropbox/Coding/capex/src/ColorModeSwitcher.js",[],"/Users/jmilani/Dropbox/Coding/capex/src/Logo.js",[],"/Users/jmilani/Dropbox/Coding/capex/src/data.js",[],"/Users/jmilani/Dropbox/Coding/capex/src/components/totalCost.js",[],"/Users/jmilani/Dropbox/Coding/capex/src/components/header/header.js",[],"/Users/jmilani/Dropbox/Coding/capex/src/components/header/nav.js",[],"/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routeSwitch.js",[],"/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routes/calculator/calculator.js",[],"/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routes/calculator/replacementOptions.js",["91"],"import React, { useState, useEffect, useRef } from 'react'\nimport {\n    Drawer,\n    DrawerBody,\n    DrawerFooter,\n    DrawerHeader,\n    DrawerOverlay,\n    DrawerContent,\n    DrawerCloseButton,\n    useDisclosure,\n    Button,\n    Box,\n    Input,\n    Select,\n    FormLabel,\n    Stat,\n    StatLabel,\n    StatNumber,\n    Tooltip,\n    useToast\n  } from \"@chakra-ui/react\"\n\nconst ReplacementOptionsDrawer = ({ filteredData, formInputs, setFormInputs }) => {\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const btnRef = useRef()\n    const toast = useToast()\n\n    const [selectedOption, setSelectedOption] = useState('')\n    const [selectedOptionArr, setSelectedOptionArr] = useState([])\n    const [units, setUnits] = useState(0)\n    const [unitCost, setUnitCost] = useState(0)\n    const [itemNote, setItemNote] = useState('Select a product.')\n    const [totalCost, setTotalCost] = useState(0)\n    \n\n    const handleSelectOption = e => {\n        setSelectedOption(e.target.value)\n    }\n\n    useEffect(() => {\n        setSelectedOptionArr(filteredData.replacementOptions.filter(i => i.name === selectedOption))\n    }, [selectedOption])\n\n    useEffect(() => {\n        setUnits(selectedOptionArr[0]?.units)\n        setUnitCost(selectedOptionArr[0]?.unitCost)\n        setItemNote(selectedOptionArr[0]?.note)\n    }, [selectedOptionArr])\n\n    useEffect(() => {\n        setTotalCost(units * unitCost)\n    }, [units, unitCost])\n\n    return (\n        <Box\n        mt={-4}\n        mb={8}\n        >\n            <Button ref={btnRef} colorScheme=\"gray\" onClick={onOpen}>\n        Replacement Cost Assistant\n      </Button>\n      <Drawer\n        isOpen={isOpen}\n        placement=\"right\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n      >\n        <DrawerOverlay>\n          <DrawerContent>\n            <DrawerCloseButton />\n            <DrawerHeader>Replacement Cost <br />Assistant</DrawerHeader>\n\n            <DrawerBody>\n            <Box>\n                <Tooltip label={itemNote} aria-label=\"A tooltip\">\n                \n            \n                    <Select\n                    placeholder=\"Select option\"\n                    mb={8}\n                    value={selectedOption}\n                    onChange={handleSelectOption}\n                    >\n                        {filteredData.replacementOptions.map( i => (\n                            <option key={i.name} value={i.name}>{i.name}</option>\n                        ))}\n                    </Select>\n                </Tooltip>\n                <FormLabel htmlFor=\"units\">Number of units ({filteredData.unit})</FormLabel>\n                <Input\n                type=\"number\"\n                mb={8}\n                value={units}\n                onChange={e => {\n                    setUnits(e.target.value)\n                }}\n                />\n                <FormLabel htmlFor=\"unitCost\">Price per {filteredData.unit} (dollars)</FormLabel>\n                <Input\n                type=\"number\"\n                mb={8}\n                value={unitCost}\n                onChange={e => {\n                    setUnitCost(e.target.value)\n                }}\n                />\n            </Box>\n            <Stat>\n                    <StatLabel>Total Replacement Cost</StatLabel>\n                    <StatNumber>{isNaN(totalCost) ? 0 : totalCost}</StatNumber>\n                </Stat>\n            </DrawerBody>\n\n            <DrawerFooter>\n              <Button variant=\"outline\" mr={3} onClick={onClose}>\n                Cancel\n              </Button>\n              <Button color=\"blue\" onClick={() => {\n                  onClose()\n                  setFormInputs({\n                    ...formInputs,\n                    replacementCost: totalCost\n                  })\n                  toast({\n                    title: \"Replacement Cost Updated\",\n                    status: \"success\",\n                    duration: 2000,\n                    isClosable: true,\n                  })\n                  }}>Save</Button>\n            </DrawerFooter>\n          </DrawerContent>\n        </DrawerOverlay>\n      </Drawer>\n        </Box>\n    )\n}\n\nexport default ReplacementOptionsDrawer\n","/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routes/calculator/main.js",[],"/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routes/calculator/expense.js",["92"],"/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routes/calculator/sideBar.js",["93"],"/Users/jmilani/Dropbox/Coding/capex/src/hooks/useUpdateExpensesData.js",["94"],"/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routes/home/propertyDetails.js",[],"/Users/jmilani/Dropbox/Coding/capex/src/hooks/useUpdatePropertyDetails.js",["95"],"/Users/jmilani/Dropbox/Coding/capex/src/components/routing/routes/projections/projections.js",[],"/Users/jmilani/Dropbox/Coding/capex/src/helpers/totalCAPEX.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":8,"column":10,"nodeType":"102","messageId":"103","endLine":8,"endColumn":27},{"ruleId":"104","severity":1,"message":"105","line":42,"column":8,"nodeType":"106","endLine":42,"endColumn":24,"suggestions":"107"},{"ruleId":"100","severity":1,"message":"108","line":1,"column":27,"nodeType":"102","messageId":"103","endLine":1,"endColumn":36},{"ruleId":"100","severity":1,"message":"109","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"110","line":24,"column":8,"nodeType":"106","endLine":24,"endColumn":18,"suggestions":"111"},{"ruleId":"104","severity":1,"message":"112","line":14,"column":8,"nodeType":"106","endLine":14,"endColumn":15,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'ColorModeSwitcher' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filteredData.replacementOptions'. Either include it or remove the dependency array. If 'setSelectedOptionArr' needs the current value of 'filteredData.replacementOptions', you can also switch to useReducer instead of useState and read 'filteredData.replacementOptions' in the reducer.","ArrayExpression",["116"],"'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'data', 'fetchedData', 'filteredData', and 'setter'. Either include them or remove the dependency array. If 'setter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["117"],"React Hook useEffect has missing dependencies: 'data', 'key', and 'setter'. Either include them or remove the dependency array. If 'setter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [filteredData.replacementOptions, selectedOption]",{"range":"125","text":"126"},"Update the dependencies array to be: [data, fetchedData, filteredData, inputObj, setter]",{"range":"127","text":"128"},"Update the dependencies array to be: [data, key, setter, value]",{"range":"129","text":"130"},[1122,1138],"[filteredData.replacementOptions, selectedOption]",[621,631],"[data, fetchedData, filteredData, inputObj, setter]",[337,344],"[data, key, setter, value]"]